{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kruna\\\\Desktop\\\\MERN STACK DEVELOPER\\\\5_ReactJs\\\\Projects\\\\Photofolio-main (1)\\\\src\\\\Component\\\\AlbumList\\\\AlbumList.js\",\n  _s = $RefreshSig$();\n// react hooks \nimport { useEffect, useState } from \"react\";\n\n// impot styles\nimport styles from \"./albumlist.module.css\";\n\n// required Components for render \nimport Album from \"../Album/Album\";\nimport AlbumForm from \"../AlbumForm/AlbumForm\";\nimport ImageList from \"../ImageList/ImageList\";\n\n// firestore database\nimport { db } from \"../../firebaseInit\";\nimport { collection, onSnapshot } from \"firebase/firestore\";\n\n// function to show all the album in database and render form to add a new album in list\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AlbumList() {\n  _s();\n  // variables to store data\n  // to store name of all the albums\n  const [albumList, setAlbumList] = useState([]);\n\n  // whether show albumForm or not (by default false)\n  const [showAlbumForm, setShowAlbumForm] = useState(false);\n\n  // to open any album with some AlbumId (by default false)\n  const [openAlbum, setOpenAlbum] = useState({\n    albumId: \"\",\n    open: false\n  });\n\n  // get data from Database when the app gets render\n  useEffect(() => {\n    // getting realtime updates from database\n    const unsub = onSnapshot(collection(db, \"album\"), snapShot => {\n      const card = snapShot.docs.map(doc => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        };\n      });\n      console.log(card);\n      // storing all the albums within local state variable\n      setAlbumList(card);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.mainContainer,\n      children: !openAlbum.open ?\n      /*#__PURE__*/\n      // if there is no album to open then render this\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.albumForm,\n          children: showAlbumForm && /*#__PURE__*/_jsxDEV(AlbumForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.header,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your Albums\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.btn,\n            onClick: () => setShowAlbumForm(!showAlbumForm),\n            children: !showAlbumForm ? \"Create Album\" : \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.albumContainer,\n          children: albumList.map((card, i) => /*#__PURE__*/_jsxDEV(Album, {\n            info: card,\n            setOpenAlbum: setOpenAlbum\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 55\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n\n      // if open album in true then render all the content within the album\n      : /*#__PURE__*/_jsxDEV(ImageList, {\n        openAlbum: openAlbum,\n        setOpenAlbum: setOpenAlbum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(AlbumList, \"qDE1TP6zqRR64qxAXJZQk+hzceY=\");\n_c = AlbumList;\nvar _c;\n$RefreshReg$(_c, \"AlbumList\");","map":{"version":3,"names":["useEffect","useState","styles","Album","AlbumForm","ImageList","db","collection","onSnapshot","jsxDEV","_jsxDEV","Fragment","_Fragment","AlbumList","_s","albumList","setAlbumList","showAlbumForm","setShowAlbumForm","openAlbum","setOpenAlbum","albumId","open","unsub","snapShot","card","docs","map","doc","id","data","console","log","children","className","mainContainer","albumForm","fileName","_jsxFileName","lineNumber","columnNumber","header","btn","onClick","albumContainer","i","info","_c","$RefreshReg$"],"sources":["C:/Users/kruna/Desktop/MERN STACK DEVELOPER/5_ReactJs/Projects/Photofolio-main (1)/src/Component/AlbumList/AlbumList.js"],"sourcesContent":["// react hooks \nimport { useEffect, useState } from \"react\"\n\n// impot styles\nimport styles from \"./albumlist.module.css\"\n\n// required Components for render \nimport Album from \"../Album/Album\"\nimport AlbumForm from \"../AlbumForm/AlbumForm\"\nimport ImageList from \"../ImageList/ImageList\"\n\n// firestore database\nimport { db } from \"../../firebaseInit\"\nimport { collection, onSnapshot} from \"firebase/firestore\";\n\n\n// function to show all the album in database and render form to add a new album in list\nexport default function AlbumList(){\n\n    // variables to store data\n    // to store name of all the albums\n    const [albumList,setAlbumList] = useState([]);\n    \n    // whether show albumForm or not (by default false)\n    const [showAlbumForm,setShowAlbumForm]=useState(false);\n\n    // to open any album with some AlbumId (by default false)\n    const [openAlbum,setOpenAlbum]=useState({albumId:\"\",open:false});\n\n\n    // get data from Database when the app gets render\n    useEffect(()=>{\n\n        // getting realtime updates from database\n        const unsub = onSnapshot(collection(db, \"album\"), (snapShot) => {\n            const card = snapShot.docs.map((doc) => {\n                return{\n                    id:doc.id,\n                    ...doc.data()\n                }\n            });\n            console.log(card);\n            // storing all the albums within local state variable\n            setAlbumList(card);\n        });\n    },[]);\n\n\n    return(\n        <>\n            {/* main container */}\n            <div className={styles.mainContainer}>\n\n                {/* whether to open any album or not */}\n                {!openAlbum.open?(\n\n                    // if there is no album to open then render this\n                    <>\n                        {/* conditional render albumform to add new album */}\n                        <div className={styles.albumForm}>\n                            {showAlbumForm && <AlbumForm />}\n                        </div>\n\n                        <div className={styles.header}>\n                            <span>Your Albums</span>\n                            {/* button to show or hide album form  */}\n                            <button className={styles.btn} \n                                onClick={()=>setShowAlbumForm(!showAlbumForm)}>\n                                    {!showAlbumForm?\"Create Album\":\"Cancel\"\n                            }</button>\n                        </div>\n\n\n                        <div className={styles.albumContainer}>\n                            {/* looping over all the albums in array and showing them one by one */}\n                            {albumList.map((card,i)=> <Album key={i} \n                                                        info={card} \n                                                        setOpenAlbum={setOpenAlbum}/>)}\n                        </div>\n                    \n                    </>\n\n                // if open album in true then render all the content within the album\n                ):<ImageList openAlbum={openAlbum} \n                            setOpenAlbum={setOpenAlbum} />}\n\n            </div>\n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}