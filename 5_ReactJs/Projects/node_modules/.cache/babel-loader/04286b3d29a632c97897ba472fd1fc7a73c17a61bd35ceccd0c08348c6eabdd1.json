{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kruna\\\\Desktop\\\\MERN STACK DEVELOPER\\\\5_ReactJs\\\\Projects\\\\PhotoFolio-Coding-Ninjas-master\\\\src\\\\Components\\\\AlbumsList\\\\Albumslist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Albumslist.css';\nimport Albumform from '../AlbumForm/Albumform';\nimport { db } from '../../firebaseinit';\nimport Imageslist from \"../ImagesList/Imageslist\";\nimport { collection, addDoc, doc, getDocs, deleteDoc, onSnapshot } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Albumslist() {\n  _s();\n  const [showForm, setShowForm] = useState(false);\n  const [albumName, setAlbumName] = useState('');\n  const [albums, setAlbums] = useState([]);\n  const [selectedAlbumId, setSelectedAlbumId] = useState(null);\n  useEffect(() => {\n    fetchAlbums();\n  }, []);\n\n  // Fetch albums from the Firestore database\n  const fetchAlbums = async () => {\n    const querySnapshot = await getDocs(collection(db, 'albums'));\n    const albumsData = [];\n    querySnapshot.forEach(doc => {\n      albumsData.push({\n        id: doc.id,\n        name: doc.data().name\n      });\n    });\n    setAlbums(albumsData);\n  };\n\n  // Toggle the visibility of the album creation form\n  const handleAddAlbum = () => {\n    setShowForm(prevShowForm => !prevShowForm);\n  };\n\n  // Create a new album in the Firestore database\n  const handleAlbumCreate = async name => {\n    try {\n      const docRef = await addDoc(collection(db, 'albums'), {\n        name: name\n      });\n      setAlbumName(name);\n      fetchAlbums(); // Fetch albums again to update the UI\n    } catch (error) {\n      console.error('Error creating album:', error);\n    }\n  };\n\n  // Handle the click event when an album is clicked\n  const handleAlbumClick = albumId => {\n    setSelectedAlbumId(albumId);\n    setShowForm(false); // Hide the form when clicking on an album\n  };\n\n  // Handle the click event when the back button is clicked\n  const handleBackClick = () => {\n    setSelectedAlbumId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showForm && /*#__PURE__*/_jsxDEV(Albumform, {\n      onAlbumCreate: handleAlbumCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 20\n    }, this), !selectedAlbumId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"albumslistmain\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text\",\n        children: \"Your Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addbtn\",\n        onClick: handleAddAlbum,\n        children: showForm ? 'Cancel' : 'Add Album'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), !selectedAlbumId && albums.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: albums.map(album => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        onClick: () => handleAlbumClick(album.id),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://cdn-icons-png.flaticon.com/128/2659/2659360.png\",\n          alt: \"album\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: album.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, album.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), selectedAlbumId && /*#__PURE__*/_jsxDEV(Imageslist, {\n      albumId: selectedAlbumId,\n      onBackClick: handleBackClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Albumslist, \"f+zTOO8Kni1cmbd9wrY1xBLH74w=\");\n_c = Albumslist;\nvar _c;\n$RefreshReg$(_c, \"Albumslist\");","map":{"version":3,"names":["React","useState","useEffect","Albumform","db","Imageslist","collection","addDoc","doc","getDocs","deleteDoc","onSnapshot","jsxDEV","_jsxDEV","Fragment","_Fragment","Albumslist","_s","showForm","setShowForm","albumName","setAlbumName","albums","setAlbums","selectedAlbumId","setSelectedAlbumId","fetchAlbums","querySnapshot","albumsData","forEach","push","id","name","data","handleAddAlbum","prevShowForm","handleAlbumCreate","docRef","error","console","handleAlbumClick","albumId","handleBackClick","children","onAlbumCreate","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","map","album","src","alt","onBackClick","_c","$RefreshReg$"],"sources":["C:/Users/kruna/Desktop/MERN STACK DEVELOPER/5_ReactJs/Projects/PhotoFolio-Coding-Ninjas-master/src/Components/AlbumsList/Albumslist.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Albumslist.css';\nimport Albumform from '../AlbumForm/Albumform';\nimport { db } from '../../firebaseinit';\nimport Imageslist from \"../ImagesList/Imageslist\"\nimport {\n  collection,\n  addDoc,\n  doc,\n  getDocs,\n  deleteDoc,\n  onSnapshot,\n} from 'firebase/firestore';\n\n\nexport default function Albumslist() {\n  const [showForm, setShowForm] = useState(false);\n  const [albumName, setAlbumName] = useState('');\n  const [albums, setAlbums] = useState([]);\n  const [selectedAlbumId, setSelectedAlbumId] = useState(null);\n\n  useEffect(() => {\n    fetchAlbums();\n  }, []);\n\n  // Fetch albums from the Firestore database\n  const fetchAlbums = async () => {\n    const querySnapshot = await getDocs(collection(db, 'albums'));\n    const albumsData = [];\n    querySnapshot.forEach((doc) => {\n      albumsData.push({ id: doc.id, name: doc.data().name });\n    });\n    setAlbums(albumsData);\n  };\n\n  // Toggle the visibility of the album creation form\n  const handleAddAlbum = () => {\n    setShowForm((prevShowForm) => !prevShowForm);\n  };\n\n  // Create a new album in the Firestore database\n  const handleAlbumCreate = async (name) => {\n    try {\n      const docRef = await addDoc(collection(db, 'albums'), {\n        name: name,\n      });\n      setAlbumName(name);\n      fetchAlbums(); // Fetch albums again to update the UI\n    } catch (error) {\n      console.error('Error creating album:', error);\n    }\n  };\n\n  // Handle the click event when an album is clicked\n  const handleAlbumClick = (albumId) => {\n    setSelectedAlbumId(albumId);\n    setShowForm(false); // Hide the form when clicking on an album\n  };\n\n  // Handle the click event when the back button is clicked\n  const handleBackClick = () => {\n    setSelectedAlbumId(null);\n  };\n\n  return (\n    <>\n      {showForm && <Albumform onAlbumCreate={handleAlbumCreate} />}\n      {!selectedAlbumId && (\n        <div className=\"albumslistmain\">\n          <h2 className=\"text\">Your Albums</h2>\n          <button className=\"addbtn\" onClick={handleAddAlbum}>\n            {showForm ? 'Cancel' : 'Add Album'}\n          </button>\n        </div>\n      )}\n\n      {!selectedAlbumId && albums.length > 0 && (\n        <div className=\"grid\">\n          {albums.map((album) => (\n            <div\n              className=\"container\"\n              key={album.id}\n              onClick={() => handleAlbumClick(album.id)}\n            >\n              <img src=\"https://cdn-icons-png.flaticon.com/128/2659/2659360.png\" alt=\"album\" />\n              <span>{album.name}</span>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {selectedAlbumId && (\n        <Imageslist albumId={selectedAlbumId} onBackClick={handleBackClick} />\n      )}\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}