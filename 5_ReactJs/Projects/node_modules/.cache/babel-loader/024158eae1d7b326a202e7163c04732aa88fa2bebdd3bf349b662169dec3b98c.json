{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kruna\\\\Desktop\\\\MERN STACK DEVELOPER\\\\5_ReactJs\\\\Projects\\\\PhotoFolio-Coding-Ninjas-master\\\\src\\\\Components\\\\AlbumForm\\\\Albumform.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './albumform.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Albumform({\n  onAlbumCreate\n}) {\n  _s();\n  // State for storing the album name\n  const [albumName, setAlbumName] = useState('');\n\n  // Event handler for input change\n  const handleInputChange = e => {\n    setAlbumName(e.target.value);\n  };\n\n  // Event handler for creating an album\n  const handleCreateAlbum = () => {\n    if (albumName.trim() === '') {\n      // Show an error toast if the album name is empty\n      toast.error('Please enter an album name');\n    } else {\n      // Call the onAlbumCreate function passed from the parent component\n      onAlbumCreate(albumName);\n      // Show a success toast after creating the album\n      toast.success('Album created successfully');\n      // Clear the album name input field\n      setAlbumName('');\n    }\n  };\n\n  // Event handler for clearing the album name input field\n  const handleClear = () => {\n    setAlbumName('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create an album\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Album name\",\n          value: albumName,\n          onChange: handleInputChange,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear\",\n          onClick: handleClear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create\",\n          onClick: handleCreateAlbum,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true);\n}\n_s(Albumform, \"IG/TpO6GdHUuHLE0JQXd2/rGQ30=\");\n_c = Albumform;\nvar _c;\n$RefreshReg$(_c, \"Albumform\");","map":{"version":3,"names":["React","useState","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Albumform","onAlbumCreate","_s","albumName","setAlbumName","handleInputChange","e","target","value","handleCreateAlbum","trim","error","success","handleClear","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","autoFocus","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kruna/Desktop/MERN STACK DEVELOPER/5_ReactJs/Projects/PhotoFolio-Coding-Ninjas-master/src/Components/AlbumForm/Albumform.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './albumform.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function Albumform({ onAlbumCreate }) {\n  // State for storing the album name\n  const [albumName, setAlbumName] = useState('');\n\n  // Event handler for input change\n  const handleInputChange = (e) => {\n    setAlbumName(e.target.value);\n  };\n\n  // Event handler for creating an album\n  const handleCreateAlbum = () => {\n    if (albumName.trim() === '') {\n      // Show an error toast if the album name is empty\n      toast.error('Please enter an album name');\n    } else {\n      // Call the onAlbumCreate function passed from the parent component\n      onAlbumCreate(albumName);\n      // Show a success toast after creating the album\n      toast.success('Album created successfully');\n      // Clear the album name input field\n      setAlbumName('');\n    }\n  };\n\n  // Event handler for clearing the album name input field\n  const handleClear = () => {\n    setAlbumName('');\n  };\n\n  return (\n    <>\n      <div className=\"form\">\n        <h1>Create an album</h1>\n        <div className=\"input\">\n          <input\n            type=\"text\"\n            placeholder=\"Album name\"\n            value={albumName}\n            onChange={handleInputChange}\n            autoFocus\n          />\n          <button className=\"clear\" onClick={handleClear}>\n            Clear\n          </button>\n          <button className=\"create\" onClick={handleCreateAlbum}>\n            Create\n          </button>\n        </div>\n      </div>\n      <ToastContainer /> {/* Add this component to display toast messages */}\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,SAASA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACnD;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMY,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIN,SAAS,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3B;MACAf,KAAK,CAACgB,KAAK,CAAC,4BAA4B,CAAC;IAC3C,CAAC,MAAM;MACL;MACAV,aAAa,CAACE,SAAS,CAAC;MACxB;MACAR,KAAK,CAACiB,OAAO,CAAC,4BAA4B,CAAC;MAC3C;MACAR,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;;EAED;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBT,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAKkB,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBjB,OAAA;QAAAiB,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBtB,OAAA;QAAKkB,SAAS,EAAC,OAAO;QAAAD,QAAA,gBACpBjB,OAAA;UACEuB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,YAAY;UACxBb,KAAK,EAAEL,SAAU;UACjBmB,QAAQ,EAAEjB,iBAAkB;UAC5BkB,SAAS;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACFtB,OAAA;UAAQkB,SAAS,EAAC,OAAO;UAACS,OAAO,EAAEX,WAAY;UAAAC,QAAA,EAAC;QAEhD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtB,OAAA;UAAQkB,SAAS,EAAC,QAAQ;UAACS,OAAO,EAAEf,iBAAkB;UAAAK,QAAA,EAAC;QAEvD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNtB,OAAA,CAACH,cAAc;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA,eACnB,CAAC;AAEP;AAACjB,EAAA,CApDuBF,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}